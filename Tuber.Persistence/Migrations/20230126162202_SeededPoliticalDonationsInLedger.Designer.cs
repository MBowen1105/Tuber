// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tuber.Persistence;

#nullable disable

namespace Tuber.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230126162202_SeededPoliticalDonationsInLedger")]
    partial class SeededPoliticalDonationsInLedger
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tuber.Domain.Models.AppConfig", b =>
                {
                    b.Property<Guid>("AppConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategorySuggestionHorizonDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(365);

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("AppConfigId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("AppConfigs", (string)null);

                    b.HasData(
                        new
                        {
                            AppConfigId = new Guid("de570e94-96ce-4fb8-b33e-22420790f577"),
                            CategorySuggestionHorizonDays = 365,
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(9024)
                        });
                });

            modelBuilder.Entity("Tuber.Domain.Models.Bank", b =>
                {
                    b.Property<Guid>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("BankId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Banks", (string)null);

                    b.HasData(
                        new
                        {
                            BankId = new Guid("b63263ae-efc7-4ccb-ae50-7c17c3b2c2d6"),
                            BankName = "Co-Op Bank",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8333),
                            IsDeleted = false,
                            OrderBy = 10
                        },
                        new
                        {
                            BankId = new Guid("627daf5d-2c35-4644-8bc8-83b7f74278a9"),
                            BankName = "Lloyds Bank",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8338),
                            IsDeleted = false,
                            OrderBy = 20
                        },
                        new
                        {
                            BankId = new Guid("1bde22e1-aa11-4f6f-ad78-4fd91cea3d64"),
                            BankName = "Barclays Bank",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8339),
                            IsDeleted = false,
                            OrderBy = 30
                        },
                        new
                        {
                            BankId = new Guid("71eb1f8c-e3f3-4053-ad82-dbc90f16b5bf"),
                            BankName = "Virgin",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8341),
                            IsDeleted = false,
                            OrderBy = 40
                        },
                        new
                        {
                            BankId = new Guid("5a250fff-d109-429a-b59d-e7582c6272a0"),
                            BankName = "West Bromwich Building Society",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8342),
                            IsDeleted = false,
                            OrderBy = 50
                        },
                        new
                        {
                            BankId = new Guid("123fc61c-0267-479e-875d-9e1d65bbcaff"),
                            BankName = "TSB",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8344),
                            IsDeleted = true,
                            OrderBy = 50
                        },
                        new
                        {
                            BankId = new Guid("64fba8d3-cef0-4a73-8f69-3fecfd186bb1"),
                            BankName = "PayPal",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8345),
                            IsDeleted = false,
                            OrderBy = 60
                        },
                        new
                        {
                            BankId = new Guid("ac5c2909-d1c7-448a-b59c-8509e19b313d"),
                            BankName = "Scottish Widows",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8349),
                            IsDeleted = false,
                            OrderBy = 70
                        },
                        new
                        {
                            BankId = new Guid("72dfefb5-6408-4e5d-baaa-1217a2c230a4"),
                            BankName = "Principality Building Society",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8350),
                            IsDeleted = false,
                            OrderBy = 80
                        },
                        new
                        {
                            BankId = new Guid("71302810-87a8-484c-83e2-148211a5b82d"),
                            BankName = "Honda Finance",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 638, DateTimeKind.Utc).AddTicks(8351),
                            IsDeleted = false,
                            OrderBy = 100
                        });
                });

            modelBuilder.Entity("Tuber.Domain.Models.BankAccount", b =>
                {
                    b.Property<Guid>("BankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccountName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ImportTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double>("OpeningBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<string>("UKBankAccount")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("UKSortCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("BankAccountId");

                    b.HasIndex("BankId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ImportTemplateId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BankAccounts", (string)null);

                    b.HasData(
                        new
                        {
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            BankAccountName = "Salary",
                            BankId = new Guid("b63263ae-efc7-4ccb-ae50-7c17c3b2c2d6"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(541),
                            ImportTemplateId = new Guid("44ec6e81-2ebf-4ec7-84b2-f74a87431962"),
                            IsDeleted = false,
                            OpeningBalance = 595.00999999999999,
                            OrderBy = 10,
                            UKBankAccount = "09411905",
                            UKSortCode = "089191"
                        },
                        new
                        {
                            BankAccountId = new Guid("552d16a1-d98b-48e9-8580-13029843c116"),
                            BankAccountName = "Cash",
                            BankId = new Guid("b63263ae-efc7-4ccb-ae50-7c17c3b2c2d6"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(544),
                            ImportTemplateId = new Guid("44ec6e81-2ebf-4ec7-84b2-f74a87431962"),
                            IsDeleted = false,
                            OpeningBalance = 0.0,
                            OrderBy = 20,
                            UKBankAccount = "00985630",
                            UKSortCode = "089191"
                        },
                        new
                        {
                            BankAccountId = new Guid("d2b75a9d-94af-41e4-8777-71251a92d3bf"),
                            BankAccountName = "Savings",
                            BankId = new Guid("b63263ae-efc7-4ccb-ae50-7c17c3b2c2d6"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(546),
                            ImportTemplateId = new Guid("44ec6e81-2ebf-4ec7-84b2-f74a87431962"),
                            IsDeleted = false,
                            OpeningBalance = 0.0,
                            OrderBy = 30,
                            UKBankAccount = "09405515",
                            UKSortCode = "089191"
                        },
                        new
                        {
                            BankAccountId = new Guid("72fcf015-7f1b-49ef-8ea3-25d1ed15b936"),
                            BankAccountName = "Lloyds 93DIX",
                            BankId = new Guid("627daf5d-2c35-4644-8bc8-83b7f74278a9"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(548),
                            ImportTemplateId = new Guid("f642096e-6573-4deb-96be-efba9016499c"),
                            IsDeleted = false,
                            OpeningBalance = 0.0,
                            OrderBy = 10,
                            UKBankAccount = "09405515",
                            UKSortCode = "901111"
                        },
                        new
                        {
                            BankAccountId = new Guid("c38c85bd-19db-4b90-a1fa-aeb74610b70b"),
                            BankAccountName = "Lloyds 25PAR",
                            BankId = new Guid("627daf5d-2c35-4644-8bc8-83b7f74278a9"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(550),
                            ImportTemplateId = new Guid("f642096e-6573-4deb-96be-efba9016499c"),
                            IsDeleted = false,
                            OpeningBalance = 0.0,
                            OrderBy = 20,
                            UKBankAccount = "09405515",
                            UKSortCode = "901111"
                        },
                        new
                        {
                            BankAccountId = new Guid("8cd1c1cf-a8e6-4148-a78c-99cd34c02997"),
                            BankAccountName = "TSB Bank Account",
                            BankId = new Guid("123fc61c-0267-479e-875d-9e1d65bbcaff"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(551),
                            IsDeleted = true,
                            OpeningBalance = 0.0,
                            OrderBy = 10,
                            UKBankAccount = "98765555",
                            UKSortCode = "440191",
                            UpdatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            UpdatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(552)
                        },
                        new
                        {
                            BankAccountId = new Guid("c8637e26-7598-49ce-89d6-82f2f184f540"),
                            BankAccountName = "PayPal",
                            BankId = new Guid("64fba8d3-cef0-4a73-8f69-3fecfd186bb1"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(556),
                            IsDeleted = true,
                            OpeningBalance = 0.0,
                            OrderBy = 10,
                            UKBankAccount = "",
                            UKSortCode = "",
                            UpdatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            UpdatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(556)
                        },
                        new
                        {
                            BankAccountId = new Guid("f0781ba0-c93d-4115-8230-7329e4708c07"),
                            BankAccountName = "Scottish Widows Pension",
                            BankId = new Guid("ac5c2909-d1c7-448a-b59c-8509e19b313d"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(558),
                            IsDeleted = true,
                            OpeningBalance = 0.0,
                            OrderBy = 10,
                            UKBankAccount = "",
                            UKSortCode = "",
                            UpdatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            UpdatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(559)
                        },
                        new
                        {
                            BankAccountId = new Guid("f9d4bc01-e0b0-43e1-9ef3-b068dfc2fc4a"),
                            BankAccountName = "Principality Building Society",
                            BankId = new Guid("72dfefb5-6408-4e5d-baaa-1217a2c230a4"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(560),
                            IsDeleted = true,
                            OpeningBalance = 0.0,
                            OrderBy = 10,
                            UKBankAccount = "",
                            UKSortCode = "",
                            UpdatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            UpdatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(560)
                        },
                        new
                        {
                            BankAccountId = new Guid("1b0a51db-1635-4df2-9faa-7f5d6f0450f1"),
                            BankAccountName = "West Bromwich Building Society",
                            BankId = new Guid("5a250fff-d109-429a-b59d-e7582c6272a0"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(562),
                            IsDeleted = true,
                            OpeningBalance = 0.0,
                            OrderBy = 10,
                            UKBankAccount = "",
                            UKSortCode = "",
                            UpdatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            UpdatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(563)
                        },
                        new
                        {
                            BankAccountId = new Guid("462c8d2c-ddd6-4de5-bc98-21c6094ffa3e"),
                            BankAccountName = "Co-Op Travel Credit Card",
                            BankId = new Guid("b63263ae-efc7-4ccb-ae50-7c17c3b2c2d6"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(564),
                            IsDeleted = true,
                            OpeningBalance = 0.0,
                            OrderBy = 10,
                            UKBankAccount = "",
                            UKSortCode = "",
                            UpdatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            UpdatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(565)
                        },
                        new
                        {
                            BankAccountId = new Guid("85a437ee-b0b4-449c-9c81-8a2b40c94feb"),
                            BankAccountName = "Honda Motors",
                            BankId = new Guid("71302810-87a8-484c-83e2-148211a5b82d"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(566),
                            IsDeleted = true,
                            OpeningBalance = 0.0,
                            OrderBy = 10,
                            UKBankAccount = "",
                            UKSortCode = "",
                            UpdatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            UpdatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(566)
                        });
                });

            modelBuilder.Entity("Tuber.Domain.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCoreCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CategoryName = "Transfer",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5556),
                            IsCoreCategory = true,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("97ea6440-ddb5-42ad-967f-5c9d34646b14"),
                            CategoryName = "Motor",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5558),
                            IsCoreCategory = true,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("ebb8bab4-a579-41ca-b42b-bf1bdb9b52f9"),
                            CategoryName = "Mortage",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5560),
                            IsCoreCategory = true,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("ff39de05-0b97-4c98-b013-9cee276774cf"),
                            CategoryName = "Entertainment",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5561),
                            IsCoreCategory = true,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("93678674-f2b0-48a3-91c3-050b506d258d"),
                            CategoryName = "Household Services",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5561),
                            IsCoreCategory = true,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("ba134b1e-095b-4dc7-800d-94f27a1d9747"),
                            CategoryName = "Bank Charges",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5564),
                            IsCoreCategory = true,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("90af6d97-3a28-47e9-b180-6cd406782c56"),
                            CategoryName = "Investment Income",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5565),
                            IsCoreCategory = true,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("3eefa969-31e0-46d3-9d81-d514035dd3de"),
                            CategoryName = "Child Maintenance",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5566),
                            IsCoreCategory = false,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("d2ccc713-366d-4f7d-8716-fab5932ec73c"),
                            CategoryName = "Other Income",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5567),
                            IsCoreCategory = false,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("643d121f-84ed-436b-af50-13225be46aef"),
                            CategoryName = "Political Donations",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(5568),
                            IsCoreCategory = false,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Tuber.Domain.Models.CategorySubcategory", b =>
                {
                    b.Property<Guid>("CategorySubcategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCoreCategorySubcategory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategorySubcategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("CategorySubcategories", (string)null);

                    b.HasData(
                        new
                        {
                            CategorySubcategoryId = new Guid("e79d158e-dd3c-4b13-86da-e0b8f9109ff7"),
                            CategoryId = new Guid("97ea6440-ddb5-42ad-967f-5c9d34646b14"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("cac01b14-67a7-4372-8eb1-5e9a0e8a007c")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("c7f625d8-3b1c-4861-9589-f2e85e0596b3"),
                            CategoryId = new Guid("97ea6440-ddb5-42ad-967f-5c9d34646b14"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("179d1384-e290-4bb7-a52d-038a3221d330")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("80172b90-d0e3-41f1-bc00-985fc14f5926"),
                            CategoryId = new Guid("97ea6440-ddb5-42ad-967f-5c9d34646b14"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("3077c60b-5d01-4982-b60e-d032cf75d926")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("002e1e54-7359-4b50-aa57-0efb62f0a42c"),
                            CategoryId = new Guid("93678674-f2b0-48a3-91c3-050b506d258d"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("04ff391a-26fc-408b-b930-731114e2d994")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("7f50d5aa-2959-4629-8eaa-e824b311549f"),
                            CategoryId = new Guid("93678674-f2b0-48a3-91c3-050b506d258d"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("66e06ca1-305c-48db-88bc-155b040fc82f")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("7870b00b-d2d3-481b-9701-73f386262e8b"),
                            CategoryId = new Guid("93678674-f2b0-48a3-91c3-050b506d258d"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("566195ce-d7a0-4252-8258-8b7b76b7846c")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("a913b3e2-ab64-4a83-8e61-b41930638b9f"),
                            CategoryId = new Guid("93678674-f2b0-48a3-91c3-050b506d258d"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("d1d1f7ac-1609-4537-a965-eb118ce91a5b")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("d9035a09-2be1-4322-84f7-30397e4f50f2"),
                            CategoryId = new Guid("93678674-f2b0-48a3-91c3-050b506d258d"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("de86efb2-764c-48b0-841a-7e29ecb83640")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("daaf4e6f-00dd-40c0-837f-cb566deb743f"),
                            CategoryId = new Guid("ba134b1e-095b-4dc7-800d-94f27a1d9747"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("ccbd867f-a971-4d3c-b879-2fccb8b92981")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("a99dcad5-5ea6-4d71-9f8c-a7f3db005a83"),
                            CategoryId = new Guid("ff39de05-0b97-4c98-b013-9cee276774cf"),
                            IsCoreCategorySubcategory = false,
                            IsDeleted = false,
                            SubcategoryId = new Guid("85ae154e-960e-4d35-8e77-a9e7d71eddf1")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("08c3ab1e-0554-4e70-8432-8443224dd42d"),
                            CategoryId = new Guid("97ea6440-ddb5-42ad-967f-5c9d34646b14"),
                            IsCoreCategorySubcategory = false,
                            IsDeleted = false,
                            SubcategoryId = new Guid("5ab8de02-7a92-4df0-8ab3-8c3450fd9545")
                        });
                });

            modelBuilder.Entity("Tuber.Domain.Models.Import", b =>
                {
                    b.Property<Guid>("ImportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumberValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BalanceOnStatementValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("BankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateValueISO8601")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DescriptionOnStatementValue")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("DescriptionValue")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("ImportRowNumber")
                        .HasColumnType("int");

                    b.Property<int>("ImportRowStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("ImportedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ImportedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoneyInValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoneyOutValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceOnStatementValue")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SortCodeValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionTypeValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("TransferBankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ValidationFailureMessages")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImportId");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImportedByUserId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Imports", (string)null);
                });

            modelBuilder.Entity("Tuber.Domain.Models.ImportTemplate", b =>
                {
                    b.Property<Guid>("ImportTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountNumberColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("BalanceOnStatementColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateColumnNumber")
                        .HasColumnType("int");

                    b.Property<string>("DateTemplate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("DescriptionOnStatementColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedColumnCount")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedHeaderRowCount")
                        .HasColumnType("int");

                    b.Property<string>("ImportFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportTemplateName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MoneyInColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("MoneyOutColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("ReferenceOnStatementStartCharacter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SeperatorChar")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("SortCodeColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("TransactionTypeColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("ImportTemplateId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("ImportTemplates", (string)null);

                    b.HasData(
                        new
                        {
                            ImportTemplateId = new Guid("44ec6e81-2ebf-4ec7-84b2-f74a87431962"),
                            AccountNumberColumnNumber = 0,
                            BalanceOnStatementColumnNumber = 6,
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(3556),
                            DateColumnNumber = 1,
                            DateTemplate = "yyyy-mm-dd",
                            DescriptionOnStatementColumnNumber = 2,
                            ExpectedColumnCount = 6,
                            ExpectedHeaderRowCount = 1,
                            ImportFileName = "",
                            ImportTemplateName = "Co-Op Bank Template",
                            IsDeleted = false,
                            MoneyInColumnNumber = 4,
                            MoneyOutColumnNumber = 5,
                            ReferenceOnStatementStartCharacter = 19,
                            SeperatorChar = ",",
                            SortCodeColumnNumber = 0,
                            TransactionTypeColumnNumber = 3
                        },
                        new
                        {
                            ImportTemplateId = new Guid("f642096e-6573-4deb-96be-efba9016499c"),
                            AccountNumberColumnNumber = 4,
                            BalanceOnStatementColumnNumber = 8,
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(3559),
                            DateColumnNumber = 1,
                            DateTemplate = "dd-mmm-yyyy",
                            DescriptionOnStatementColumnNumber = 5,
                            ExpectedColumnCount = 8,
                            ExpectedHeaderRowCount = 1,
                            ImportFileName = "",
                            ImportTemplateName = "Lloyds Bank Template",
                            IsDeleted = false,
                            MoneyInColumnNumber = 7,
                            MoneyOutColumnNumber = 6,
                            ReferenceOnStatementStartCharacter = 0,
                            SeperatorChar = ",",
                            SortCodeColumnNumber = 3,
                            TransactionTypeColumnNumber = 2
                        });
                });

            modelBuilder.Entity("Tuber.Domain.Models.Ledger", b =>
                {
                    b.Property<Guid>("LedgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasMaxLength(15)
                        .HasColumnType("float");

                    b.Property<Guid>("BankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUtc")
                        .HasMaxLength(8)
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsReconciled")
                        .HasColumnType("bit");

                    b.Property<double?>("MoneyIn")
                        .HasColumnType("float");

                    b.Property<double?>("MoneyOut")
                        .HasColumnType("float");

                    b.Property<string>("Reference")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TransactionOrigin")
                        .HasColumnType("int");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid?>("TransferBankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("LedgerId");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("SubcategoryId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Ledgers", (string)null);

                    b.HasData(
                        new
                        {
                            LedgerId = new Guid("97730458-05ef-4e84-9e9f-d7b3d601976f"),
                            Balance = 606.89999999999998,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8112),
                            DateUtc = new DateTime(2022, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PAYPAL PAYMENT",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 11.890000000000001,
                            Reference = "576J2223CC7UY",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("c8637e26-7598-49ce-89d6-82f2f184f540")
                        },
                        new
                        {
                            LedgerId = new Guid("b581cb5c-8510-48de-b292-bd02641ec08d"),
                            Balance = 11.890000000000001,
                            BankAccountId = new Guid("c8637e26-7598-49ce-89d6-82f2f184f540"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8118),
                            DateUtc = new DateTime(2022, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PAYPAL PAYMENT",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 11.890000000000001,
                            Reference = "576J2223CC7UY",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415")
                        },
                        new
                        {
                            LedgerId = new Guid("857fd6c8-e83f-4155-8909-64de3f18f566"),
                            Balance = 595.0,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8121),
                            DateUtc = new DateTime(2022, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PAYPAL PAYMENT",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 11.9,
                            Reference = "576J2223CC7UY",
                            RowNumber = 2,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("c8637e26-7598-49ce-89d6-82f2f184f540")
                        },
                        new
                        {
                            LedgerId = new Guid("d37a4933-756f-4e8a-9c93-d812472178f6"),
                            Balance = 23.789999999999999,
                            BankAccountId = new Guid("c8637e26-7598-49ce-89d6-82f2f184f540"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8126),
                            DateUtc = new DateTime(2022, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PAYPAL PAYMENT",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 11.9,
                            Reference = "576J2223CC7UY",
                            RowNumber = 2,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415")
                        },
                        new
                        {
                            LedgerId = new Guid("62846f42-1c01-4b2c-bca1-118dcc5cb7c1"),
                            Balance = 564.63,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("93678674-f2b0-48a3-91c3-050b506d258d"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8135),
                            DateUtc = new DateTime(2022, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PNET3584204-1",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 30.370000000000001,
                            Reference = "",
                            RowNumber = 1,
                            SubcategoryId = new Guid("de86efb2-764c-48b0-841a-7e29ecb83640"),
                            TransactionOrigin = 1,
                            TransactionType = "DD"
                        },
                        new
                        {
                            LedgerId = new Guid("4e01f919-f0a8-47a3-aa32-7140597a640f"),
                            Balance = 464.63,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8138),
                            DateUtc = new DateTime(2022, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "TFR 93000810462300",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 100.0,
                            Reference = "",
                            RowNumber = 2,
                            TransactionOrigin = 1,
                            TransactionType = "TRANSFER",
                            TransferBankAccountId = new Guid("552d16a1-d98b-48e9-8580-13029843c116")
                        },
                        new
                        {
                            LedgerId = new Guid("27b590d4-41d5-4bdd-b593-084bd7756cba"),
                            Balance = 464.63,
                            BankAccountId = new Guid("552d16a1-d98b-48e9-8580-13029843c116"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8144),
                            DateUtc = new DateTime(2022, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "TFR 93000810462300",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 100.0,
                            Reference = "",
                            RowNumber = 3,
                            TransactionOrigin = 1,
                            TransactionType = "TRANSFER",
                            TransferBankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415")
                        },
                        new
                        {
                            LedgerId = new Guid("567b5a46-7b17-4a1e-832e-f009fab60ef8"),
                            Balance = 14.630000000000001,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8147),
                            DateUtc = new DateTime(2022, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SCOTTISH WIDOWS",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 450.0,
                            Reference = "PR859326H",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("f0781ba0-c93d-4115-8230-7329e4708c07")
                        },
                        new
                        {
                            LedgerId = new Guid("6495197d-b80d-4358-9c2c-4e52779614f0"),
                            Balance = 450.0,
                            BankAccountId = new Guid("f0781ba0-c93d-4115-8230-7329e4708c07"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8151),
                            DateUtc = new DateTime(2022, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SCOTTISH WIDOWS",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 450.0,
                            Reference = "PR859326H",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415")
                        },
                        new
                        {
                            LedgerId = new Guid("06226032-0cd7-406c-ae33-90aa2061e045"),
                            Balance = -109.68000000000001,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8154),
                            DateUtc = new DateTime(2022, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PRINCIPALITY BS",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 124.31,
                            Reference = "079271710",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("f9d4bc01-e0b0-43e1-9ef3-b068dfc2fc4a")
                        },
                        new
                        {
                            LedgerId = new Guid("67a77698-15bb-4b79-b6a5-e053d9a3fa2f"),
                            Balance = 124.31,
                            BankAccountId = new Guid("f9d4bc01-e0b0-43e1-9ef3-b068dfc2fc4a"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8157),
                            DateUtc = new DateTime(2022, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PRINCIPALITY BS",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 124.31,
                            Reference = "079271710",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415")
                        },
                        new
                        {
                            LedgerId = new Guid("8bae9b31-420c-475d-bdf8-e1c259a62546"),
                            Balance = -190.36000000000001,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8160),
                            DateUtc = new DateTime(2022, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "WEST BROMWICH BSOC",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 80.680000000000007,
                            Reference = "9015660300023849",
                            RowNumber = 2,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("1b0a51db-1635-4df2-9faa-7f5d6f0450f1")
                        },
                        new
                        {
                            LedgerId = new Guid("c13ae2e6-cf8a-4583-8db5-9834bb20fa5a"),
                            Balance = 0.0,
                            BankAccountId = new Guid("1b0a51db-1635-4df2-9faa-7f5d6f0450f1"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8163),
                            DateUtc = new DateTime(2022, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "WEST BROMWICH BSOC",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 80.680000000000007,
                            Reference = "079271710",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415")
                        },
                        new
                        {
                            LedgerId = new Guid("9980d6a7-949c-4375-83c9-186efe3c96e8"),
                            Balance = -190.36000000000001,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8167),
                            DateUtc = new DateTime(2022, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "THE CO-OP BANK",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 5.9900000000000002,
                            Reference = "4552061305790731",
                            RowNumber = 3,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("462c8d2c-ddd6-4de5-bc98-21c6094ffa3e")
                        },
                        new
                        {
                            LedgerId = new Guid("6cc18b28-9390-4837-a181-0444810515e7"),
                            Balance = 0.0,
                            BankAccountId = new Guid("462c8d2c-ddd6-4de5-bc98-21c6094ffa3e"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8170),
                            DateUtc = new DateTime(2022, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "THE CO-OP BANK",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 5.9900000000000002,
                            Reference = "4552061305790731",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415")
                        },
                        new
                        {
                            LedgerId = new Guid("0a7eea23-0537-408e-935a-36e89ea0db6c"),
                            Balance = 0.0,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("d2ccc713-366d-4f7d-8716-fab5932ec73c"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8174),
                            DateUtc = new DateTime(2022, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "EVERYDAYREWARD NET",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 1.0,
                            Reference = "",
                            RowNumber = 4,
                            SubcategoryId = new Guid("45048692-c142-48e4-83b8-fdd7177443c9"),
                            TransactionOrigin = 1,
                            TransactionType = "CREDIT"
                        },
                        new
                        {
                            LedgerId = new Guid("069215d0-7731-4751-90f3-4e4e98cf676c"),
                            Balance = 4.6500000000000004,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8177),
                            DateUtc = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "M Bowen",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 200.0,
                            Reference = "PROFIT TAKING",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "CREDIT",
                            TransferBankAccountId = new Guid("c38c85bd-19db-4b90-a1fa-aeb74610b70b")
                        },
                        new
                        {
                            LedgerId = new Guid("147f2b53-72cb-4bbb-adbf-14e036c97814"),
                            Balance = 0.0,
                            BankAccountId = new Guid("c38c85bd-19db-4b90-a1fa-aeb74610b70b"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8180),
                            DateUtc = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "M Bowen",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 200.0,
                            Reference = "PROFIT TAKING",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "CREDIT",
                            TransferBankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415")
                        },
                        new
                        {
                            LedgerId = new Guid("6dcb4fb2-f386-4950-ac00-112b7a2dda36"),
                            Balance = 0.0,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8185),
                            DateUtc = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "HONDA FINANCE EURO",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 176.56999999999999,
                            Reference = "0704899-2219333577",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("85a437ee-b0b4-449c-9c81-8a2b40c94feb")
                        },
                        new
                        {
                            LedgerId = new Guid("bf009ba6-7586-4ab9-9597-87502f284a3f"),
                            Balance = 0.0,
                            BankAccountId = new Guid("85a437ee-b0b4-449c-9c81-8a2b40c94feb"),
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8188),
                            DateUtc = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "HONDA FINANCE EURO",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyIn = 176.56999999999999,
                            Reference = "0704899-2219333577",
                            RowNumber = 1,
                            TransactionOrigin = 1,
                            TransactionType = "DD",
                            TransferBankAccountId = new Guid("85a437ee-b0b4-449c-9c81-8a2b40c94feb")
                        },
                        new
                        {
                            LedgerId = new Guid("1c13a7f0-7256-4765-abca-2d7d636e16f5"),
                            Balance = -176.59,
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            CategoryId = new Guid("643d121f-84ed-436b-af50-13225be46aef"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(8191),
                            DateUtc = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "LABOUR PARTY",
                            IsDeleted = false,
                            IsReconciled = false,
                            MoneyOut = 4.6699999999999999,
                            Reference = "653577715906242518",
                            RowNumber = 2,
                            TransactionOrigin = 1,
                            TransactionType = "DD"
                        });
                });

            modelBuilder.Entity("Tuber.Domain.Models.Subcategory", b =>
                {
                    b.Property<Guid>("SubcategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCoreSubcategory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubcategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("SubcategoryId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Subcategories", (string)null);

                    b.HasData(
                        new
                        {
                            SubcategoryId = new Guid("cac01b14-67a7-4372-8eb1-5e9a0e8a007c"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6022),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Fuel"
                        },
                        new
                        {
                            SubcategoryId = new Guid("179d1384-e290-4bb7-a52d-038a3221d330"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6032),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Insurance"
                        },
                        new
                        {
                            SubcategoryId = new Guid("3077c60b-5d01-4982-b60e-d032cf75d926"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6034),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Road Tax"
                        },
                        new
                        {
                            SubcategoryId = new Guid("66e06ca1-305c-48db-88bc-155b040fc82f"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6037),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Electricity"
                        },
                        new
                        {
                            SubcategoryId = new Guid("04ff391a-26fc-408b-b930-731114e2d994"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6039),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Gas"
                        },
                        new
                        {
                            SubcategoryId = new Guid("566195ce-d7a0-4252-8258-8b7b76b7846c"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6042),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Water"
                        },
                        new
                        {
                            SubcategoryId = new Guid("d1d1f7ac-1609-4537-a965-eb118ce91a5b"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6045),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Mobile"
                        },
                        new
                        {
                            SubcategoryId = new Guid("ccbd867f-a971-4d3c-b879-2fccb8b92981"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6047),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Debit Interest"
                        },
                        new
                        {
                            SubcategoryId = new Guid("85ae154e-960e-4d35-8e77-a9e7d71eddf1"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6049),
                            IsCoreSubcategory = false,
                            IsDeleted = false,
                            SubcategoryName = "Gambling"
                        },
                        new
                        {
                            SubcategoryId = new Guid("de86efb2-764c-48b0-841a-7e29ecb83640"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6052),
                            IsCoreSubcategory = false,
                            IsDeleted = false,
                            SubcategoryName = "Internet"
                        },
                        new
                        {
                            SubcategoryId = new Guid("5ab8de02-7a92-4df0-8ab3-8c3450fd9545"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6054),
                            IsCoreSubcategory = false,
                            IsDeleted = false,
                            SubcategoryName = "Repayments"
                        },
                        new
                        {
                            SubcategoryId = new Guid("45048692-c142-48e4-83b8-fdd7177443c9"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2023, 1, 26, 16, 22, 1, 639, DateTimeKind.Utc).AddTicks(6055),
                            IsCoreSubcategory = false,
                            IsDeleted = false,
                            SubcategoryName = "Loyalty"
                        });
                });

            modelBuilder.Entity("Tuber.Domain.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCoreUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            FullName = "Administrator",
                            IsCoreUser = true,
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e13a3a77-93c1-4e64-8d58-a517ca1be8d1"),
                            FullName = "Mark Bowen",
                            IsCoreUser = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Tuber.Domain.Models.AppConfig", b =>
                {
                    b.HasOne("Tuber.Domain.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Domain.Models.Bank", b =>
                {
                    b.HasOne("Tuber.Domain.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Domain.Models.BankAccount", b =>
                {
                    b.HasOne("Tuber.Domain.Models.Bank", "Bank")
                        .WithMany("BankAccounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.ImportTemplate", "ImportTemplate")
                        .WithMany()
                        .HasForeignKey("ImportTemplateId");

                    b.HasOne("Tuber.Domain.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("Bank");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ImportTemplate");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Domain.Models.Category", b =>
                {
                    b.HasOne("Tuber.Domain.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Domain.Models.CategorySubcategory", b =>
                {
                    b.HasOne("Tuber.Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId");

                    b.Navigation("Category");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("Tuber.Domain.Models.Import", b =>
                {
                    b.HasOne("Tuber.Domain.Models.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Tuber.Domain.Models.User", "ImportedByUser")
                        .WithMany()
                        .HasForeignKey("ImportedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId");

                    b.Navigation("BankAccount");

                    b.Navigation("Category");

                    b.Navigation("ImportedByUser");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("Tuber.Domain.Models.ImportTemplate", b =>
                {
                    b.HasOne("Tuber.Domain.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Domain.Models.Ledger", b =>
                {
                    b.HasOne("Tuber.Domain.Models.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId");

                    b.HasOne("Tuber.Domain.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("BankAccount");

                    b.Navigation("Category");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Subcategory");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Domain.Models.Subcategory", b =>
                {
                    b.HasOne("Tuber.Domain.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Domain.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Domain.Models.Bank", b =>
                {
                    b.Navigation("BankAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
