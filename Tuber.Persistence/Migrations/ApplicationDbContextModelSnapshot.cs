// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tuber.Persistence;

#nullable disable

namespace Tuber.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tuber.Application.Models.Bank", b =>
                {
                    b.Property<Guid>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ImportTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("BankId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ImportTemplateId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Banks", (string)null);

                    b.HasData(
                        new
                        {
                            BankId = new Guid("b63263ae-efc7-4ccb-ae50-7c17c3b2c2d6"),
                            BankName = "Co-Op Bank",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(4853),
                            ImportTemplateId = new Guid("44ec6e81-2ebf-4ec7-84b2-f74a87431962"),
                            IsDeleted = false,
                            OrderBy = 10
                        },
                        new
                        {
                            BankId = new Guid("627daf5d-2c35-4644-8bc8-83b7f74278a9"),
                            BankName = "Lloyds Bank",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(4869),
                            IsDeleted = false,
                            OrderBy = 20
                        },
                        new
                        {
                            BankId = new Guid("1bde22e1-aa11-4f6f-ad78-4fd91cea3d64"),
                            BankName = "Barclays Bank",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(4873),
                            IsDeleted = false,
                            OrderBy = 30
                        },
                        new
                        {
                            BankId = new Guid("71eb1f8c-e3f3-4053-ad82-dbc90f16b5bf"),
                            BankName = "Virgin",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(4878),
                            IsDeleted = false,
                            OrderBy = 40
                        },
                        new
                        {
                            BankId = new Guid("5a250fff-d109-429a-b59d-e7582c6272a0"),
                            BankName = "West Bromwich Building Society",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(4880),
                            IsDeleted = false,
                            OrderBy = 50
                        },
                        new
                        {
                            BankId = new Guid("123fc61c-0267-479e-875d-9e1d65bbcaff"),
                            BankName = "TSB",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(4883),
                            IsDeleted = true,
                            OrderBy = 50
                        });
                });

            modelBuilder.Entity("Tuber.Application.Models.BankAccount", b =>
                {
                    b.Property<Guid>("BankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccountName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ImportTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<string>("UKBankAccount")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("UKSortCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("BankAccountId");

                    b.HasIndex("BankId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BankAccounts", (string)null);

                    b.HasData(
                        new
                        {
                            BankAccountId = new Guid("0c942b54-d561-499a-843b-e4387e7e6415"),
                            BankAccountName = "Salary",
                            BankId = new Guid("b63263ae-efc7-4ccb-ae50-7c17c3b2c2d6"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(6750),
                            ImportTemplateId = new Guid("44ec6e81-2ebf-4ec7-84b2-f74a87431962"),
                            IsDeleted = false,
                            OrderBy = 10,
                            UKBankAccount = "09411905",
                            UKSortCode = "089191"
                        },
                        new
                        {
                            BankAccountId = new Guid("552d16a1-d98b-48e9-8580-13029843c116"),
                            BankAccountName = "Cash",
                            BankId = new Guid("b63263ae-efc7-4ccb-ae50-7c17c3b2c2d6"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(6755),
                            ImportTemplateId = new Guid("44ec6e81-2ebf-4ec7-84b2-f74a87431962"),
                            IsDeleted = false,
                            OrderBy = 20,
                            UKBankAccount = "00985630",
                            UKSortCode = "089191"
                        },
                        new
                        {
                            BankAccountId = new Guid("d2b75a9d-94af-41e4-8777-71251a92d3bf"),
                            BankAccountName = "Savings",
                            BankId = new Guid("b63263ae-efc7-4ccb-ae50-7c17c3b2c2d6"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(6758),
                            ImportTemplateId = new Guid("44ec6e81-2ebf-4ec7-84b2-f74a87431962"),
                            IsDeleted = false,
                            OrderBy = 30,
                            UKBankAccount = "09405515",
                            UKSortCode = "089191"
                        },
                        new
                        {
                            BankAccountId = new Guid("72fcf015-7f1b-49ef-8ea3-25d1ed15b936"),
                            BankAccountName = "Lloyds 93DIX",
                            BankId = new Guid("627daf5d-2c35-4644-8bc8-83b7f74278a9"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(6762),
                            ImportTemplateId = new Guid("f642096e-6573-4deb-96be-efba9016499c"),
                            IsDeleted = false,
                            OrderBy = 10,
                            UKBankAccount = "09405515",
                            UKSortCode = "901111"
                        },
                        new
                        {
                            BankAccountId = new Guid("c38c85bd-19db-4b90-a1fa-aeb74610b70b"),
                            BankAccountName = "Lloyds 25PAR",
                            BankId = new Guid("627daf5d-2c35-4644-8bc8-83b7f74278a9"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(6764),
                            ImportTemplateId = new Guid("f642096e-6573-4deb-96be-efba9016499c"),
                            IsDeleted = false,
                            OrderBy = 20,
                            UKBankAccount = "09405515",
                            UKSortCode = "901111"
                        },
                        new
                        {
                            BankAccountId = new Guid("8cd1c1cf-a8e6-4148-a78c-99cd34c02997"),
                            BankAccountName = "TSB Bank Account",
                            BankId = new Guid("123fc61c-0267-479e-875d-9e1d65bbcaff"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(6767),
                            IsDeleted = true,
                            OrderBy = 10,
                            UKBankAccount = "98765555",
                            UKSortCode = "440191",
                            UpdatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            UpdatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(6768)
                        });
                });

            modelBuilder.Entity("Tuber.Application.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCoreCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("27d48d80-b231-4c28-b1e5-af2100d24913"),
                            CategoryName = "Transfer",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 975, DateTimeKind.Utc).AddTicks(2241),
                            IsCoreCategory = true,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("97ea6440-ddb5-42ad-967f-5c9d34646b14"),
                            CategoryName = "Motor",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 975, DateTimeKind.Utc).AddTicks(2244),
                            IsCoreCategory = true,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("ebb8bab4-a579-41ca-b42b-bf1bdb9b52f9"),
                            CategoryName = "Mortage",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 975, DateTimeKind.Utc).AddTicks(2249),
                            IsCoreCategory = false,
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = new Guid("3eefa969-31e0-46d3-9d81-d514035dd3de"),
                            CategoryName = "Child Maintenance",
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 975, DateTimeKind.Utc).AddTicks(2251),
                            IsCoreCategory = false,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Tuber.Application.Models.CategorySubcategory", b =>
                {
                    b.Property<Guid>("CategorySubcategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCoreCategorySubcategory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategorySubcategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("CategorySubcategories", (string)null);

                    b.HasData(
                        new
                        {
                            CategorySubcategoryId = new Guid("e79d158e-dd3c-4b13-86da-e0b8f9109ff7"),
                            CategoryId = new Guid("97ea6440-ddb5-42ad-967f-5c9d34646b14"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("cac01b14-67a7-4372-8eb1-5e9a0e8a007c")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("c7f625d8-3b1c-4861-9589-f2e85e0596b3"),
                            CategoryId = new Guid("97ea6440-ddb5-42ad-967f-5c9d34646b14"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("179d1384-e290-4bb7-a52d-038a3221d330")
                        },
                        new
                        {
                            CategorySubcategoryId = new Guid("80172b90-d0e3-41f1-bc00-985fc14f5926"),
                            CategoryId = new Guid("97ea6440-ddb5-42ad-967f-5c9d34646b14"),
                            IsCoreCategorySubcategory = true,
                            IsDeleted = false,
                            SubcategoryId = new Guid("3077c60b-5d01-4982-b60e-d032cf75d926")
                        });
                });

            modelBuilder.Entity("Tuber.Application.Models.Import", b =>
                {
                    b.Property<Guid>("ImportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumberValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BalanceOnStatementValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("BankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DescriptionOnStatementValue")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("DescriptionValue")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("ImportRowNumber")
                        .HasColumnType("int");

                    b.Property<int>("ImportRowStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("ImportedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ImportedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoneyInValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoneyOutValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ReferenceOnStatementValue")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SortCodeValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("SuggestedCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SuggestedSubcategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionTypeValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ValidationFailureMessages")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImportId");

                    b.HasIndex("ImportedByUserId");

                    b.ToTable("Imports", (string)null);
                });

            modelBuilder.Entity("Tuber.Application.Models.ImportTemplate", b =>
                {
                    b.Property<Guid>("ImportTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountNumberColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("BalanceOnStatementColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateColumnNumber")
                        .HasColumnType("int");

                    b.Property<string>("DateTemplate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("DescriptionOnStatementColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedColumnCount")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedHeaderRowCount")
                        .HasColumnType("int");

                    b.Property<string>("ImportFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportTemplateName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MoneyInColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("MoneyOutColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("ReferenceOnStatementStartCharacter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SeperatorChar")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("SortCodeColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("TransactionTypeColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("ImportTemplateId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("ImportTemplates", (string)null);

                    b.HasData(
                        new
                        {
                            ImportTemplateId = new Guid("44ec6e81-2ebf-4ec7-84b2-f74a87431962"),
                            AccountNumberColumnNumber = 0,
                            BalanceOnStatementColumnNumber = 6,
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(9637),
                            DateColumnNumber = 1,
                            DateTemplate = "yyyy-mm-dd",
                            DescriptionOnStatementColumnNumber = 2,
                            ExpectedColumnCount = 6,
                            ExpectedHeaderRowCount = 1,
                            ImportFileName = "",
                            ImportTemplateName = "Co-Op Bank Template",
                            IsDeleted = false,
                            MoneyInColumnNumber = 4,
                            MoneyOutColumnNumber = 5,
                            ReferenceOnStatementStartCharacter = 19,
                            SeperatorChar = ",",
                            SortCodeColumnNumber = 0,
                            TransactionTypeColumnNumber = 3
                        },
                        new
                        {
                            ImportTemplateId = new Guid("f642096e-6573-4deb-96be-efba9016499c"),
                            AccountNumberColumnNumber = 4,
                            BalanceOnStatementColumnNumber = 8,
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 974, DateTimeKind.Utc).AddTicks(9643),
                            DateColumnNumber = 1,
                            DateTemplate = "dd-mmm-yyyy",
                            DescriptionOnStatementColumnNumber = 5,
                            ExpectedColumnCount = 8,
                            ExpectedHeaderRowCount = 1,
                            ImportFileName = "",
                            ImportTemplateName = "Lloyds Bank Template",
                            IsDeleted = false,
                            MoneyInColumnNumber = 7,
                            MoneyOutColumnNumber = 6,
                            ReferenceOnStatementStartCharacter = 0,
                            SeperatorChar = ",",
                            SortCodeColumnNumber = 3,
                            TransactionTypeColumnNumber = 2
                        });
                });

            modelBuilder.Entity("Tuber.Application.Models.Subcategory", b =>
                {
                    b.Property<Guid>("SubcategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCoreSubcategory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubcategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("SubcategoryId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Subcategories", (string)null);

                    b.HasData(
                        new
                        {
                            SubcategoryId = new Guid("cac01b14-67a7-4372-8eb1-5e9a0e8a007c"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 975, DateTimeKind.Utc).AddTicks(2848),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Fuel"
                        },
                        new
                        {
                            SubcategoryId = new Guid("179d1384-e290-4bb7-a52d-038a3221d330"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 975, DateTimeKind.Utc).AddTicks(2859),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Insurance"
                        },
                        new
                        {
                            SubcategoryId = new Guid("3077c60b-5d01-4982-b60e-d032cf75d926"),
                            CreatedByUserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            CreatedOnUtc = new DateTime(2022, 12, 29, 17, 45, 58, 975, DateTimeKind.Utc).AddTicks(2861),
                            IsCoreSubcategory = true,
                            IsDeleted = false,
                            SubcategoryName = "Tax"
                        });
                });

            modelBuilder.Entity("Tuber.Application.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCoreUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("02ceedc1-d3b4-4e5e-8844-0d853c24463b"),
                            FullName = "Administrator",
                            IsCoreUser = true,
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e13a3a77-93c1-4e64-8d58-a517ca1be8d1"),
                            FullName = "Mark Bowen",
                            IsCoreUser = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Tuber.Application.Models.Bank", b =>
                {
                    b.HasOne("Tuber.Application.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Application.Models.ImportTemplate", "ImportTemplate")
                        .WithMany()
                        .HasForeignKey("ImportTemplateId");

                    b.HasOne("Tuber.Application.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ImportTemplate");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Application.Models.BankAccount", b =>
                {
                    b.HasOne("Tuber.Application.Models.Bank", null)
                        .WithMany("BankAccounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Application.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Application.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Application.Models.Category", b =>
                {
                    b.HasOne("Tuber.Application.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Application.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Application.Models.CategorySubcategory", b =>
                {
                    b.HasOne("Tuber.Application.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Application.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId");

                    b.Navigation("Category");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("Tuber.Application.Models.Import", b =>
                {
                    b.HasOne("Tuber.Application.Models.User", "ImportedByUser")
                        .WithMany()
                        .HasForeignKey("ImportedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportedByUser");
                });

            modelBuilder.Entity("Tuber.Application.Models.ImportTemplate", b =>
                {
                    b.HasOne("Tuber.Application.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Application.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Application.Models.Subcategory", b =>
                {
                    b.HasOne("Tuber.Application.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuber.Application.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Tuber.Application.Models.Bank", b =>
                {
                    b.Navigation("BankAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
